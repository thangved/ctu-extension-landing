.button {
  @include font-size(button);
  @include font-weight(button);
  & {
    background-color: color-bg(button-light);
    border-color: color-border(button-light);
    border-radius: $button--radius;
    border-style: $button-form--border-style;
    border-width: $button-form--border-width;
    color: color(button-light);
    cursor: pointer;
    display: inline-flex;
    gap: 10px;
    height: $button-form--height;
    justify-content: center;
    letter-spacing: inherit;
    padding: (
        ($button-form--height - get-line-height(button) - ($button-form--border-width * 2)) * 0.5
      )
      ($button--padding-h - $button-form--border-width);
    text-align: center;
    text-decoration: none !important;
    text-transform: $button--transform;
    transition: background 0.15s ease;
    white-space: nowrap;
  }

  &:active {
    outline: 0;
  }

  &:hover {
    background-color: color-bg(button-light-hover);
    border-color: color-border(button-light-hover);
  }

  &.is-loading {
    color: transparent !important;
    pointer-events: none;
    position: relative;

    &::after {
      animation: button-loading 0.6s infinite linear;
      border: $button-loading--thickness solid color(button-light);
      border-radius: 50%;
      border-right-color: transparent !important;
      border-top-color: transparent !important;
      content: "";
      display: block;
      height: get-line-height(button);
      left: 50%;
      margin-left: -(get-line-height(button) * 0.5);
      margin-top: -(get-line-height(button) * 0.5);
      position: absolute;
      top: 50%;
      width: get-line-height(button);
      z-index: 1;
    }
  }

  &[disabled] {
    background-color: color-bg(button-disabled) !important;
    border-color: color-border(button-disabled);
    color: color(button-disabled);
    cursor: not-allowed;

    &.is-loading {
      &::after {
        border-color: color(button-disabled);
      }
    }
  }
}

.button-sm {
  height: $button-form-sm--height;
  padding: (
      ($button-form-sm--height - get-line-height(button) - ($button-form--border-width * 2)) * 0.5
    )
    ($button-sm--padding-h - $button-form--border-width);
}

.button-dark {
  background-color: color-bg(button-dark);
  border-color: color-border(button-dark);
  color: color(button-dark);

  &:hover {
    background-color: color-bg(button-dark-hover);
    border-color: color-border(button-dark-hover);
  }

  &.is-loading {
    &::after {
      border-color: color(button-dark);
    }
  }
}

.button-primary {
  background-color: color-bg(button-primary);
  border-color: color-border(button-primary);
  color: color(button-primary);

  &:hover {
    background-color: color-bg(button-primary-hover);
    border-color: color-border(button-primary-hover);
  }

  &.is-loading {
    &::after {
      border-color: color(button-primary);
    }
  }
}

.button-secondary {
  background-color: color-bg(button-secondary);
  border-color: color-border(button-secondary);
  color: color(button-secondary);

  &:hover {
    background-color: color-bg(button-secondary-hover);
    border-color: color-border(button-secondary-hover);
  }

  &.is-loading {
    &::after {
      border-color: color(button-secondary);
    }
  }
}

.button-block {
  display: flex;
  width: 100%;
}

.button-group {
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  margin-left: -($button-group-padding * 0.5);
  margin-right: -($button-group-padding * 0.5);
  margin-top: -($button-group-padding * 0.5);

  &:last-of-type {
    margin-bottom: -($button-group-padding * 0.5);
  }

  &:not(:last-of-type) {
    margin-bottom: ($button-group-padding * 0.5);
  }

  > [class*="button"] {
    margin: $button-group-padding * 0.5;
  }
}

@include media("<=medium") {
  .button-wide-mobile {
    max-width: $button--max-size-mobile;
    width: 100%;
  }
}

@keyframes button-loading {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}
